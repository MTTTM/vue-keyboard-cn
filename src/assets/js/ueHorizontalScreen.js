export var getDir = function () { return document.documentElement.clientWidth > document.documentElement.clientHeight ? 1 : 0 }; export var isMobile = function () { var t = navigator.userAgent.toLowerCase(), e = "ontouchstart" in window && "ontouchstart" in document; return !(!/mobile/i.test(t) && !e) }; var dispatch = function (t, e, n) { void 0 === n && (n = null), t.data = { data: e }, n ? 1 == n.nodeType && "function" == typeof n.dispatchEvent && n.dispatchEvent(t) : window.dispatchEvent(t) }; function fixParamsRotate(t) { return [90, -90].indexOf(t) > -1 ? t : 90 } function createEvent(t) { var e = document.createEvent("HTMLEvents"); return e.initEvent(t, !1, !0), e } function eventFix(t) { return t.touches ? t.targetTouches[0] : t || window.event } function preventDefault(t, e) { t && t.$prevent && e.preventDefault() } function stopPropagation(t, e) { t && t.$stop && e.stopPropagation() } function fnStartParams(t, e) { return void 0 === t && (t = {}), function (n) { stopPropagation(e, n), preventDefault(e, n); var i = eventFix(n); t.startX = i.clientX, t.startY = i.clientY, t.disX = 0, t.disY = 0, t.disc = t.distance } } function fnMoveParams(t, e) { return void 0 === t && (t = {}), function (n) { stopPropagation(e, n), preventDefault(e, n); var i = eventFix(n), o = i.clientX, a = i.clientY; t.disX = o - t.startX, t.disY = a - t.startY } } function fnEndParams(t, e, n, i, o) { void 0 === t && (t = ""), void 0 === e && (e = {}), void 0 === n && (n = {}); var a = { win: function (t, e) { n[t] && n[t] instanceof Event ? dispatch(n[t], e) : console.error("events [" + t + "] of window is no reigstered") }, doms: function (t, e) { i(e, o) } }, r = function (e, n) { var i = n.disY, o = n.disX, r = n.rotate, s = n.isHsAdapetAndMobile, d = 0; d = "swipeLeft" == e || "swipeRight" == e ? s ? Math.abs(i) : Math.abs(o) : s ? Math.abs(o) : Math.abs(i), a[t](e, { dis: d, type: e, rotate: r }) }; return function (t) { stopPropagation(o, t), preventDefault(o, t); var n = e, i = n.disY, a = n.distance, s = n.disX, d = n.rotate, c = getDir(), v = Object.assign({}, e, { isHsAdapetAndMobile: 1 !== c && isMobile() }); if (1 != c && isMobile()) { var u = ""; i < 0 && i < -a ? u = 90 === d ? "swipeLeft" : "swipeRight" : i > 0 && i > a && (u = 90 === d ? "swipeRight" : "swipeLeft"), u && r(u, v); var p = ""; s < 0 && s < -a ? p = 90 === d ? "swipeBottom" : "swipeTop" : s > 0 && s > a && (p = 90 === d ? "swipeTop" : "swipeBottom"), p && r(p, v) } else i < 0 && i < -a ? r("swipeTop", v) : i > 0 && i > a && r("swipeBottom", v), s < 0 && s < -a ? r("swipeLeft", v) : s > 0 && s > a && r("swipeRight", v) } } function hsLayoutFunc(t, e) { void 0 === t && (t = {}); var n = t, i = n.oneTimesWidth, o = n.oneTimesHeight, a = n.cssVar, r = n.setWrapAttr, s = n.adaptEvent, d = n.adaptedCallback, c = n.el, v = n.binding, u = n.vnode, p = n.rotate, w = window.innerWidth, f = window.innerHeight, m = (w > f ? w : f) / i, l = !isMobile(), h = v.instance ? v.instance : u.context; c.$hsAdapted = !1, 1 == getDir() || l ? m * o > f && (m = f / o) : m * o > w && (m = w / o), document.querySelector("html").style.setProperty("--" + a, m), null != window.orientation && 180 !== window.orientation && 0 !== window.orientation || l ? (90 === window.orientation || -90 === window.orientation || l) && (c.style.webkitTransform = c.style.transform = "rotate(0)", r && (c.style.width = w + "px", c.style.height = f + "px")) : (c.style.webkitTransform = c.style.transform = "rotate(" + p + "deg)", 90 == p ? c.style.webkitTransformOrigin = c.style.transformOrigin = w / 2 + "px center" : -90 == p && (c.style.webkitTransformOrigin = c.style.transformOrigin = " center " + f / 2 + "px"), r && (c.style.width = f + "px", c.style.height = w + "px")), c.$hsAdapted = !0, !1 !== e && (dispatch(s, c.$hsAdapted), "function" == typeof d ? d(c, !0) : h && "function" == typeof h[d] && h[d](c, !0)) } function directiveBindfunction(t, e, n) { var i = e.value, o = i.cssVar, a = i.width, r = i.height, s = i.times, d = i.triggerTime, c = i.AdaptEventName, v = i.setWrapAttr, u = i.adaptedCallback, p = i.rotate; p = fixParamsRotate(p), s || (s = 1, console.warn("times is required!!")); var w = a / s, f = r / s; o || (o = "hs-var"), c || (c = "hsAdapt"), d || (d = 1e3), "setWrapAttr" in e.value || (v = !0); var m, l = { oneTimesWidth: w, oneTimesHeight: f, el: t, cssVar: o, setWrapAttr: v, adaptEvent: createEvent(c), adaptedCallback: u, binding: e, vnode: n, rotate: p }; t.$hsLayout = function (t) { void 0 === t && (t = !1), hsLayoutFunc(l, t) }, t.$delayLayout = function (t) { void 0 === t && (t = !1), clearTimeout(m), m = setTimeout((function () { return hsLayoutFunc(l, t) }), d) }, t.$hsAdapted = !1, t.$hsLayout(!1), "onorientationchange" in window ? (window.removeEventListener("orientationchange", t.$delayLayout), window.addEventListener("orientationchange", t.$delayLayout, !1)) : (window.removeEventListener("resize", t.$hsLayout), window.addEventListener("resize", t.$hsLayout, !1)) } function directiveUnBind(t) { window.removeEventListener("resize", t.$hsLayout), window.removeEventListener("orientationchange", t.$delayLayout), t.$hsLayout = null } function directiveForDomfunction(t, e) { var n = e.value, i = e.modifiers, o = i.stop, a = i.prevent, r = i.clockwise, s = 90; i.counterclockwise ? s = -90 : r && (s = 90); var d = { startX: 0, startY: 0, disX: 0, distance: 1, rotate: s }; t.$stop = o, t.$prevent = a; var c = fnStartParams(d, t), v = fnMoveParams(d, t), u = fnEndParams("doms", d, {}, n, t); isMobile() ? (t.addEventListener("touchstart", c, !1), t.addEventListener("touchmove", v, !1), t.addEventListener("touchend", u, !1)) : (t.addEventListener("mousedown", c, !1), t.addEventListener("mousemove", v, !1), t.addEventListener("mouseup", u, !1)) } export var directive = { bind: directiveBindfunction, unbind: directiveUnBind, beforeMount: directiveBindfunction, unmounted: directiveUnBind }; export var directiveForDom = { bind: directiveForDomfunction, beforeMount: directiveForDomfunction }; var eventInited = !1; export var event = function (t) { if (void 0 === t && (t = { distance: 50, pre: "" }), !eventInited) { var e = t, n = e.pre, i = e.distance, o = e.rotate; n = n || ""; var a = { startX: 0, startY: 0, disX: 0, distance: i = i || 50, rotate: o = fixParamsRotate(o) }, r = { swipeLeft: createEvent(n + "swipeLeft"), swipeRight: createEvent(n + "swipeRight"), swipeTop: createEvent(n + "swipeTop"), swipeBottom: createEvent(n + "swipeBottom") }; isMobile() ? (window.addEventListener("touchstart", fnStartParams(a), !1), window.addEventListener("touchmove", fnMoveParams(a), !1), window.addEventListener("touchend", fnEndParams("win", a, r), !1)) : (window.addEventListener("mousedown", fnStartParams(a), !1), window.addEventListener("mousemove", fnMoveParams(a), !1), window.addEventListener("mouseup", fnEndParams("win", a, r), !1)), eventInited = !0 } };